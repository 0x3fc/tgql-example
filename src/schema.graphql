# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

# Movie
type Movie {
  identity: ID!
  title: String!
  released: Int!
  tagline: String

  # Person role in the movie. Only exists in nested query
  roles: [String!]

  # Person relation with the movie. Only exists in nested query
  personRelation: PersonMovieRelation
  people(pagination: PaginationInput, relation: PersonMovieRelation = ALL): [Person!]!
}

input MovieFiltersInput {
  titleContains: String
  taglineContains: String
  releasedBefore: Int
  releasedAfter: Int
  operator: WhereOperator = AND
}

input PaginationInput {
  page: Int = 1
  perPage: Int = 30
}

# Person
type Person {
  identity: ID!
  name: String!
  born: String

  # Person role in the movie. Only exists in nested query
  roles: [String!]

  # Person relation with the movie. Only exists in nested query
  movieRelation: PersonMovieRelation
  movies(pagination: PaginationInput, relation: PersonMovieRelation = ALL): [Movie!]!
}

input PersonFiltersInput {
  nameContains: String
  bornBefore: Int
  bornAfter: Int
  operator: WhereOperator = AND
}

enum PersonMovieRelation {
  ACTED_IN
  DIRECTED
  PRODUCED
  WROTE
  REVIEWED
  ALL
}

type Query {
  movie(identity: String!): Movie!
  movies(filters: MovieFiltersInput, pagination: PaginationInput): [Movie!]!
  person(identity: String!): Person!
  people(filters: PersonFiltersInput, pagination: PaginationInput): [Person!]!
}

enum WhereOperator {
  AND
  OR
}
